# Get unique indexes on single int-like columns (PRIMARY have priority):
"""
SELECT COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME, COLUMNS.COLUMN_NAME, UNIQUES.INDEX_NAME, COLUMNS.DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS INNER JOIN (
  SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, GROUP_CONCAT(COLUMN_NAME) AS COLUMN_NAME
  FROM INFORMATION_SCHEMA.STATISTICS
  WHERE NON_UNIQUE=0
  GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME
  HAVING COUNT(*)=1
) AS UNIQUES
ON (
  COLUMNS.TABLE_SCHEMA = UNIQUES.TABLE_SCHEMA AND
  COLUMNS.TABLE_NAME = UNIQUES.TABLE_NAME AND
  COLUMNS.COLUMN_NAME = UNIQUES.COLUMN_NAME
)
WHERE
  COLUMNS.DATA_TYPE IN ('tinyint', 'smallint', 'int', 'bigint')
ORDER BY
  COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME,
  CASE UNIQUES.INDEX_NAME
    WHEN 'PRIMARY' THEN 0
    ELSE 1
  END
"""
# Get unique indexes on single columns (PRIMARY have priority):
"""
SELECT COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME, COLUMNS.COLUMN_NAME, UNIQUES.INDEX_NAME, COLUMNS.DATA_TYPE, COLUMNS.CHARACTER_SET_NAME
FROM INFORMATION_SCHEMA.COLUMNS INNER JOIN (
  SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, GROUP_CONCAT(COLUMN_NAME) AS COLUMN_NAME
  FROM INFORMATION_SCHEMA.STATISTICS
  WHERE NON_UNIQUE=0
  GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME
  HAVING COUNT(*)=1
) AS UNIQUES
ON (
  COLUMNS.TABLE_SCHEMA = UNIQUES.TABLE_SCHEMA AND
  COLUMNS.TABLE_NAME = UNIQUES.TABLE_NAME AND
  COLUMNS.COLUMN_NAME = UNIQUES.COLUMN_NAME
)
ORDER BY
  COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME,
  CASE UNIQUES.INDEX_NAME
    WHEN 'PRIMARY' THEN 0
    ELSE 1
  END,
  CASE DATA_TYPE
    WHEN 'tinyint' THEN 0
    WHEN 'smallint' THEN 1
    WHEN 'int' THEN 2
    WHEN 'bigint' THEN 3
    ELSE 100
  END
    """
# Get unique indexes on single columns (PRIMARY have priority):
"""
SELECT COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME, COLUMNS.COLUMN_NAME, UNIQUES.INDEX_NAME, COLUMNS.DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS INNER JOIN (
  SELECT TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, GROUP_CONCAT(COLUMN_NAME) AS COLUMN_NAME
  FROM INFORMATION_SCHEMA.STATISTICS
  WHERE NON_UNIQUE=0
  GROUP BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME
  HAVING COUNT(*)=1
) AS UNIQUES
ON (
  COLUMNS.TABLE_SCHEMA = UNIQUES.TABLE_SCHEMA AND
  COLUMNS.TABLE_NAME = UNIQUES.TABLE_NAME AND
  COLUMNS.COLUMN_NAME = UNIQUES.COLUMN_NAME
)
ORDER BY
  COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME,
  CASE UNIQUES.INDEX_NAME
    WHEN 'PRIMARY' THEN 0
    ELSE 1
  END,
  CASE DATA_TYPE
    WHEN 'tinyint' THEN 0
    WHEN 'smallint' THEN 1
    WHEN 'int' THEN 2
    WHEN 'bigint' THEN 3
    ELSE 100
  END
"""
